name: CI

on:
  push:
    branches: ["main"]
    tags: ["*.*.*"]
  pull_request:

env:
  REGISTRY: harbor.roxxas96.net
  DOCKER_USERNAME: robot$example-app+github
  DOCKER_IMAGE_NAME: example-app/example-service
  HELM_USERNAME: robot$example-app-helm+github

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    concurrency:
      group: "bump-version"
      cancel-in-progress: false

    outputs:
      appVersion: ${{ steps.formatVersion.outputs.appVersion }}
      chartVersion: ${{ steps.formatVersion.outputs.chartVersion }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3
        with:
          versionSpec: "5.x"

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v3

      - name: Format version
        id: formatVersion
        run: |
          if [ "${{ steps.gitversion.outputs.CommitsSinceVersionSource }}" = 0 ]; then
            echo "appVersion=${{ steps.gitversion.outputs.MajorMinorPatch }}" >> $GITHUB_OUTPUT
          else
            echo "appVersion=${{ steps.gitversion.outputs.MajorMinorPatch }}-rc${{ steps.gitversion.outputs.CommitsSinceVersionSource }}" >> $GITHUB_OUTPUT
          fi
          OLD_CHART_VERSION=$(grep '^version:' example-service/chart/example-service/Chart.yaml | awk '{print $2}')
          IFS='.' read -r MAJOR MINOR PATCH <<< "$OLD_CHART_VERSION"
          echo "chartVersion=$MAJOR.$MINOR.$((PATCH + 1))" >> $GITHUB_OUTPUT

      - name: Bump Version
        run: |
          sed -i 's/^version = ".*"/version = "${{ steps.formatVersion.outputs.appVersion }}"/' example-service/Cargo.toml
          sed -i '/name = "example-service"/{n;s/version = ".*"/version = "${{ steps.formatVersion.outputs.appVersion }}"/}' example-service/Cargo.lock
          sed -i 's/^appVersion: .*/appVersion: "${{ steps.formatVersion.outputs.appVersion }}"/' example-service/chart/example-service/Chart.yaml
          sed -i 's/^version: .*/version: "${{ steps.formatVersion.outputs.chartVersion }}"/' example-service/chart/example-service/Chart.yaml

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: version-files
          path: |
            example-service/Cargo.toml
            example-service/Cargo.lock
            example-service/chart/example-service/Chart.yaml

  docker-build-push:
    runs-on: ubuntu-latest

    needs: [bump-version]

    permissions:
      contents: read
      packages: write
      id-token: write

    concurrency:
      group: "docker-build-push"
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - name: Delete old version files
        run: |
          rm -f example-service/Cargo.toml
          rm -f example-service/Cargo.lock
          rm -f example-service/chart/example-service/Chart.yaml

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: version-files
          path: example-service

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Format tag template
        id: tags
        run: |
          IMAGE_NAME=$(echo "${{ env.REGISTRY }}/${{ env.DOCKER_IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          BRANCH_NAME=$(echo "${{ github.head_ref }}" | sed 's/\//-/g')
          SHORT_SHA=$(echo "${{ github.sha }}" | cut -c 1-7)

          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "tags=$IMAGE_NAME:$BRANCH_NAME-$SHORT_SHA" >> $GITHUB_OUTPUT
          else
            echo "tags=$IMAGE_NAME:latest, $IMAGE_NAME:${{ needs.bump-version.outputs.appVersion }}" >> $GITHUB_OUTPUT
          fi
          ls -r

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: example-service
          file: example-service/Dockerfile
          tags: ${{ steps.tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Sign the published Docker image
        run: echo "${{ steps.tags.outputs.tags }}" | xargs -I {} cosign sign -y {}@${{ steps.build-and-push.outputs.digest }}

  helm-publish:
    runs-on: ubuntu-latest

    needs: [bump-version]

    if: github.ref == 'refs/heads/main'

    permissions:
      contents: read
      packages: write
      id-token: write

    concurrency:
      group: "helm-publish"
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - name: Delete old version files
        run: |
          rm -f example-service/Cargo.toml
          rm -f example-service/Cargo.lock
          rm -f example-service/chart/example-service/Chart.yaml

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: version-files
          path: example-service

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Install cosign
        uses: sigstore/cosign-installer@v3

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ env.HELM_USERNAME }}
          password: ${{ secrets.HELM_PASSWORD }}

      - name: Publish Helm chart to registry
        id: publish-helm
        run: |
          helm package example-service/chart/example-service/
          OUTPUT=$(helm push example-service-${{ needs.bump-version.outputs.chartVersion }}.tgz oci://${{ env.REGISTRY }}/example-app-helm 2>&1)

          echo $OUTPUT

          echo "tag=$(echo "$OUTPUT" | grep -oE "Pushed: [^ ]+" | awk '{print $2}')" >> $GITHUB_OUTPUT
          echo "digest=$(echo "$OUTPUT" | grep -oE "Digest: sha256:[a-f0-9]+" | awk '{print $2}')" >> $GITHUB_OUTPUT

      - name: Sign the chart
        run: |
          cosign sign -y ${{ steps.publish-helm.outputs.tag }}@${{ steps.publish-helm.outputs.digest }}

  commit-version:
    runs-on: ubuntu-latest

    needs: [bump-version]

    if: github.ref == 'refs/heads/main'

    concurrency:
      group: "commit-version"
      cancel-in-progress: false

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.BOT_SSH_KEY }}

      - name: Delete old version files
        run: |
          rm -f example-service/Cargo.toml
          rm -f example-service/Cargo.lock
          rm -f example-service/chart/example-service/Chart.yaml

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: version-files
          path: example-service

      - name: Commit Version Bump
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: [skip ci] bump example-service version to ${{ needs.bump-version.outputs.appVersion }}"
          commit_options: "-a"
          commit_author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
