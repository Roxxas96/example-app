apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: example-app-ci
spec:
  description: |
    Pipeline running the full ci of the repo.
  params:
    - name: git-revision
      type: string
      description: Revision to checkout. (branch, tag, sha, ref, etc...).
  workspaces:
    - name: shared-data
      description: |
        This workspace contains the cloned repo files, so they can be read by the
        next task.
    - name: git-credentials
      description: Credentials for git operations.
    - name: docker-credentials
      description: Credentials for docker operations.
    - name: helm-credentials
      description: Credentials for helm operations.
    - name: cosign-key
      description: Workspace containing cosign.key
  tasks:
    - name: fetch-source
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-data
        - name: ssh-directory
          workspace: git-credentials
      params:
        - name: url
          value: git@github.com:Roxxas96/example-app.git
        - name: revision
          value: origin/$(params.git-revision)
        - name: depth
          value: "0"
        - name: fetchTags
          value: "true"
        - name: refspec
          value: +refs/heads/*:refs/remotes/origin/*
    - name: chart-test
      runAfter: [fetch-source]
      taskRef:
        kind: Task
        name: chart-testing
      workspaces:
        - name: source
          workspace: shared-data
    - name: pre-commits
      runAfter: [fetch-source]
      params:
        - name: revision
          value: $(params.git-revision)
      taskRef:
        kind: Task
        name: pre-commits
      workspaces:
        - name: source
          workspace: shared-data
    - name: bump-version
      runAfter: [fetch-source]
      taskRef:
        kind: Task
        name: example-app-bump-version
      workspaces:
        - name: source
          workspace: shared-data
    - name: commit-version
      runAfter: [bump-version]
      when:
        - input: $(params.git-revision)
          operator: in
          values: [main]
      taskRef:
        kind: Task
        name: commit-changes
      params:
        - name: commit-message
          value: "chore: [skip ci] bump version to $(tasks.bump-version.results.app-version)"
        - name: commit-username
          value: github-actions[bot]
        - name: commit-email
          value: github-actions[bot]@users.noreply.github.com
        - name: revision
          value: $(params.git-revision)
      workspaces:
        - name: source
          workspace: shared-data
        - name: ssh-directory
          workspace: git-credentials
    - name: docker-publish
      runAfter: [bump-version]
      when:
        - input: $(params.git-revision)
          operator: in
          values: [main]
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: IMAGE
          value: harbor.internal.roxxas96.net/example-app/example-service:$(tasks.bump-version.results.app-version)
        - name: DOCKERFILE
          value: example-service/Dockerfile
        - name: CONTEXT
          value: example-service
        - name: EXTRA_ARGS
          value:
            - --cache=true
            - --destination=harbor.internal.roxxas96.net/example-app/example-service:latest
      workspaces:
        - name: source
          workspace: shared-data
        - name: dockerconfig
          workspace: docker-credentials
    - name: docker-sign
      runAfter: [docker-publish]
      taskRef:
        kind: Task
        name: artifact-sign
      workspaces:
        - name: cosign-key
          workspace: cosign-key
        - name: registry-credentials
          workspace: docker-credentials
      params:
        - name: artifact
          value: harbor.internal.roxxas96.net/example-app/example-service:$(tasks.bump-version.results.app-version)@$(tasks.docker-publish.results.IMAGE_DIGEST)
    - name: docker-build
      runAfter: [bump-version]
      when:
        - input: $(params.git-revision)
          operator: notin
          values: [main]
      taskRef:
        kind: Task
        name: kaniko
      params:
        - name: IMAGE
          value: harbor.internal.roxxas96.net/example-app/example-service:$(tasks.bump-version.results.app-version)
        - name: DOCKERFILE
          value: example-service/Dockerfile
        - name: CONTEXT
          value: example-service
        - name: EXTRA_ARGS
          value:
            - --destination=harbor.internal.roxxas96.net/example-app/example-service:latest
            - --no-push
      workspaces:
        - name: source
          workspace: shared-data
        - name: dockerconfig
          workspace: docker-credentials
    - name: helm-publish
      runAfter: [docker-publish]
      taskRef:
        kind: Task
        name: helm-publish
      params:
        - name: chart-path
          value: example-service/chart/example-service
        - name: chart-name
          value: example-service
        - name: chart-version
          value: $(tasks.bump-version.results.chart-version)
        - name: registry
          value: oci://harbor.internal.roxxas96.net/example-app-helm
      workspaces:
        - name: source
          workspace: shared-data
        - name: registry-credentials
          workspace: helm-credentials
    - name: helm-sign
      runAfter: [helm-publish]
      taskRef:
        kind: Task
        name: artifact-sign
      workspaces:
        - name: cosign-key
          workspace: cosign-key
        - name: registry-credentials
          workspace: helm-credentials
      params:
        - name: artifact
          value: harbor.internal.roxxas96.net/example-app-helm/example-service:$(tasks.bump-version.results.chart-version)@$(tasks.helm-publish.results.digest)
